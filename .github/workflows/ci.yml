# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-22.04]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Important pour setuptools-scm

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install -e .[dev,test]

    - name: Run unit tests with coverage
      run: |
        pytest tests/unit/ -v --cov=trading_system --cov-report=xml

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Linting and Code Quality
    runs-on: ubuntu-22.04
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install -e .[dev]

    - name: Run flake8
      run: |
        flake8 src/ --max-line-length=88 --extend-ignore=E203,E501

    - name: Run black check
      run: |
        black --check src/ tests/

    - name: Run isort check
      run: |
        isort --check-only src/ tests/

    - name: Run mypy
      run: |
        mypy src/ --ignore-missing-imports

  security:
    name: Security Scan
    runs-on: ubuntu-22.04
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Run safety check
      run: |
        pip install safety
        safety check --full-report

    - name: Run bandit
      run: |
        pip install bandit
        bandit -r src/ -ll

  build:
    name: Build Package
    runs-on: ubuntu-22.04
    needs: [test, lint, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Build package
      run: |
        pip install build
        python -m build

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: trading-system-package
        path: dist/

#  train-model:
#    runs-on: ubuntu-latest
#    needs: test
#    if: github.ref == 'refs/heads/main'
#    steps:
#    - uses: actions/checkout@v4
#    - name: Train model
#      run: |
#        python scripts/train_model.py
#      env:
#        ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
#    - name: Upload model
#      uses: actions/upload-artifact@v3
#      with:
#        name: ml-models
#        path: models/

#  deploy:
#    runs-on: ubuntu-latest
#    needs: [test, train-model]
#    if: github.ref == 'refs/heads/main'
#    steps:
#    - uses: actions/checkout@v4
#    - name: Deploy to cloud
#      run: |
#        python scripts/deploy.py